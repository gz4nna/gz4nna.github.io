name: deploy_documentation
on:
  push:
    branches:
      - master # Default release branch
jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout master #获取master，放在master目录下
        uses: actions/checkout@v2.3.1
        with:
          ref: master
          path: master

      - name: Install docfx #安装docfx
        run: choco install docfx -y
      - name: docfx build #生成文档，这里会输出到master/docs，如果你采用默认的docfx设置，就是master/_site
        run: docfx docfx.json
        working-directory: master
      - name: Checkout docs #获取gh-pages，如果没有这个分支，需要手动创建一下
        uses: actions/checkout@v2.3.1
        with:
          ref: gh-pages
          path: gh-pages
      - name: Clear docs #清空gh-pages中的内容
        run: Get-ChildItem -Force -Exclude .git | ForEach-Object { Remove-Item -Recurse -Verbose -Force $_ }
        working-directory: gh-pages
      - name: Sync new content #复制生成的docs到gh-pages
        run: Copy-Item -Recurse -Verbose -Force "$env:GITHUB_WORKSPACE/master/docs/*" "$env:GITHUB_WORKSPACE/gh-pages"
        working-directory: gh-pages
      - name: Commit to gh-pages and push #提交推送
        run: |
          $ErrorActionPreference = "Continue"
          git add -A
          git diff HEAD --exit-code
          if ($LASTEXITCODE -eq 0) {
            Write-Host "No changes to commit!"
          } else {
            git config --global user.name "github-actions-docfx[bot]"
            git config --global user.email "gz4nna@gmail.com"
            git commit -m "Updated docs from commit $env:GITHUB_SHA on $env:GITHUB_REF"
            git remote set-url origin https://x-access-token:${{ secrets.DEPLOY_DOC }}@github.com/${{ github.repository }}
            git push origin gh-pages
          }
        working-directory: gh-pages         
